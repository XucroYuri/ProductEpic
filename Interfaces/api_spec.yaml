# API规范定义
# 版本: 1.0.0

# 这个文件定义了系统的API接口规范
# API接口是系统与外部世界交互的主要方式，需要保持稳定性和向后兼容性

# ======== API基本信息 ========
api_info:
  title: "产品API"
  description: "产品的API接口规范"
  version: "1.0.0"
  base_path: "/api/v1"
  formats: ["JSON", "XML"]
  default_format: "JSON"

# ======== 认证与授权 ========
authentication:
  methods:
    - name: "JWT"
      description: "基于JWT的认证"
      header: "Authorization"
      format: "Bearer {token}"
      expiration: "24h"
    
    - name: "API Key"
      description: "基于API Key的认证"
      header: "X-API-Key"
      format: "{api_key}"

authorization:
  roles:
    - name: "admin"
      description: "管理员角色，拥有所有权限"
    
    - name: "user"
      description: "普通用户角色，拥有有限权限"
  
  permissions:
    - name: "read:entity1"
      description: "读取Entity1的权限"
    
    - name: "write:entity1"
      description: "创建和修改Entity1的权限"
    
    - name: "read:entity2"
      description: "读取Entity2的权限"
    
    - name: "write:entity2"
      description: "创建和修改Entity2的权限"

# ======== 端点定义 ========
endpoints:
  # Entity1相关端点
  - path: "/entity1"
    methods:
      - method: "GET"
        summary: "获取Entity1列表"
        description: "分页获取Entity1列表"
        parameters:
          - name: "page"
            in: "query"
            type: "integer"
            default: 1
            description: "页码"
          - name: "limit"
            in: "query"
            type: "integer"
            default: 10
            description: "每页数量"
          - name: "status"
            in: "query"
            type: "string"
            enum: ["ACTIVE", "INACTIVE", "PENDING"]
            description: "按状态筛选"
        responses:
          - status: 200
            description: "成功获取Entity1列表"
            schema: "Entity1List"
          - status: 400
            description: "请求参数错误"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
        required_permissions: ["read:entity1"]
        rate_limit: "100/minute"
        caching: "max-age=60"
      
      - method: "POST"
        summary: "创建Entity1"
        description: "创建新的Entity1实例"
        parameters:
          - name: "body"
            in: "body"
            schema: "Entity1Create"
            description: "Entity1创建参数"
        responses:
          - status: 201
            description: "成功创建Entity1"
            schema: "Entity1"
          - status: 400
            description: "请求参数错误"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
          - status: 403
            description: "权限不足"
            schema: "Error"
        required_permissions: ["write:entity1"]
        rate_limit: "50/minute"
        idempotent: false
  
  - path: "/entity1/{id}"
    methods:
      - method: "GET"
        summary: "获取Entity1详情"
        description: "根据ID获取Entity1详情"
        parameters:
          - name: "id"
            in: "path"
            type: "string"
            format: "uuid"
            required: true
            description: "Entity1的ID"
        responses:
          - status: 200
            description: "成功获取Entity1详情"
            schema: "Entity1"
          - status: 404
            description: "Entity1不存在"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
        required_permissions: ["read:entity1"]
        caching: "max-age=30"
      
      - method: "PUT"
        summary: "更新Entity1"
        description: "更新指定ID的Entity1"
        parameters:
          - name: "id"
            in: "path"
            type: "string"
            format: "uuid"
            required: true
            description: "Entity1的ID"
          - name: "body"
            in: "body"
            schema: "Entity1Update"
            description: "Entity1更新参数"
        responses:
          - status: 200
            description: "成功更新Entity1"
            schema: "Entity1"
          - status: 400
            description: "请求参数错误"
            schema: "Error"
          - status: 404
            description: "Entity1不存在"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
          - status: 403
            description: "权限不足"
            schema: "Error"
        required_permissions: ["write:entity1"]
        idempotent: true
      
      - method: "DELETE"
        summary: "删除Entity1"
        description: "删除指定ID的Entity1"
        parameters:
          - name: "id"
            in: "path"
            type: "string"
            format: "uuid"
            required: true
            description: "Entity1的ID"
        responses:
          - status: 204
            description: "成功删除Entity1"
          - status: 404
            description: "Entity1不存在"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
          - status: 403
            description: "权限不足"
            schema: "Error"
        required_permissions: ["write:entity1"]
        idempotent: true
  
  # Entity2相关端点
  - path: "/entity1/{entity1Id}/entity2"
    methods:
      - method: "GET"
        summary: "获取关联的Entity2列表"
        description: "获取指定Entity1关联的Entity2列表"
        parameters:
          - name: "entity1Id"
            in: "path"
            type: "string"
            format: "uuid"
            required: true
            description: "Entity1的ID"
          - name: "page"
            in: "query"
            type: "integer"
            default: 1
            description: "页码"
          - name: "limit"
            in: "query"
            type: "integer"
            default: 10
            description: "每页数量"
        responses:
          - status: 200
            description: "成功获取Entity2列表"
            schema: "Entity2List"
          - status: 404
            description: "Entity1不存在"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
        required_permissions: ["read:entity2"]
        caching: "max-age=30"
      
      - method: "POST"
        summary: "创建Entity2"
        description: "为指定Entity1创建关联的Entity2"
        parameters:
          - name: "entity1Id"
            in: "path"
            type: "string"
            format: "uuid"
            required: true
            description: "Entity1的ID"
          - name: "body"
            in: "body"
            schema: "Entity2Create"
            description: "Entity2创建参数"
        responses:
          - status: 201
            description: "成功创建Entity2"
            schema: "Entity2"
          - status: 400
            description: "请求参数错误"
            schema: "Error"
          - status: 404
            description: "Entity1不存在"
            schema: "Error"
          - status: 401
            description: "未授权"
            schema: "Error"
          - status: 403
            description: "权限不足"
            schema: "Error"
        required_permissions: ["write:entity2"]
        idempotent: false

# ======== 数据模型定义 ========
schemas:
  - name: "Entity1"
    description: "Entity1完整模型"
    properties:
      - name: "id"
        type: "string"
        format: "uuid"
        description: "唯一标识符"
      - name: "name"
        type: "string"
        description: "实体名称"
      - name: "status"
        type: "string"
        enum: ["ACTIVE", "INACTIVE", "PENDING"]
        description: "实体状态"
      - name: "createdAt"
        type: "string"
        format: "date-time"
        description: "创建时间"
      - name: "updatedAt"
        type: "string"
        format: "date-time"
        description: "更新时间"
  
  - name: "Entity1Create"
    description: "创建Entity1的参数"
    properties:
      - name: "name"
        type: "string"
        required: true
        description: "实体名称"
      - name: "status"
        type: "string"
        enum: ["ACTIVE", "INACTIVE", "PENDING"]
        default: "ACTIVE"
        description: "实体状态"
  
  - name: "Entity1Update"
    description: "更新Entity1的参数"
    properties:
      - name: "name"
        type: "string"
        description: "实体名称"
      - name: "status"
        type: "string"
        enum: ["ACTIVE", "INACTIVE", "PENDING"]
        description: "实体状态"
  
  - name: "Entity1List"
    description: "Entity1列表响应"
    properties:
      - name: "items"
        type: "array"
        items: "Entity1"
        description: "Entity1列表"
      - name: "total"
        type: "integer"
        description: "总数量"
      - name: "page"
        type: "integer"
        description: "当前页码"
      - name: "limit"
        type: "integer"
        description: "每页数量"
  
  - name: "Entity2"
    description: "Entity2完整模型"
    properties:
      - name: "id"
        type: "string"
        format: "uuid"
        description: "唯一标识符"
      - name: "entity1Id"
        type: "string"
        format: "uuid"
        description: "关联的Entity1 ID"
      - name: "value"
        type: "number"
        format: "decimal"
        description: "实体值"
      - name: "createdAt"
        type: "string"
        format: "date-time"
        description: "创建时间"
  
  - name: "Entity2Create"
    description: "创建Entity2的参数"
    properties:
      - name: "value"
        type: "number"
        format: "decimal"
        required: true
        description: "实体值"
  
  - name: "Entity2List"
    description: "Entity2列表响应"
    properties:
      - name: "items"
        type: "array"
        items: "Entity2"
        description: "Entity2列表"
      - name: "total"
        type: "integer"
        description: "总数量"
      - name: "page"
        type: "integer"
        description: "当前页码"
      - name: "limit"
        type: "integer"
        description: "每页数量"
  
  - name: "Error"
    description: "错误响应"
    properties:
      - name: "code"
        type: "string"
        description: "错误代码"
      - name: "message"
        type: "string"
        description: "错误消息"
      - name: "details"
        type: "object"
        description: "错误详情"

# ======== API版本控制 ========
versioning:
  strategy: "URL Path"
  description: "通过URL路径区分API版本，如/api/v1/、/api/v2/"
  compatibility:
    - rule: "向后兼容性"
      description: "新版本API必须支持旧版本的请求格式"
    - rule: "弃用通知"
      description: "API弃用前必须提前至少3个月通知"
    - rule: "版本共存"
      description: "至少支持最近两个主要版本的API"

# ======== API文档 ========
documentation:
  format: "OpenAPI 3.0"
  auto_generation: true
  include_examples: true
  include_schemas: true
  include_authentication: true